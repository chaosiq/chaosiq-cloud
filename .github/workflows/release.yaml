name: Release

on:
  workflow_run:
    workflows: ["Build"]
#    branches: [master]
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+rc[0-9]+'
    types:
      - completed

#on:
#  push:
#    tags:
#      - '[0-9]+.[0-9]+.[0-9]+'
#      - '[0-9]+.[0-9]+.[0-9]+rc[0-9]+'


#        # Strip git ref prefix from version
#        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
#
#        # Strip "v" prefix from tag name
#        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
#
#        # Use Docker `latest` tag convention
#        [ "$VERSION" == "master" ] && VERSION=latest


jobs:
  log:
    runs-on: ubuntu-16.04
    steps:
    - name: log
      run: |
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        echo "Releasing ChaosIQ-Cloud extension version $VERSION (${{ github.ref }})"

#  release-to-pypi:
#    runs-on: ubuntu-16.04
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up Python
#      uses: actions/setup-python@v1
#      with:
#        python-version: '3.5'
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install setuptools wheel twine
#    - name: Build and publish
#      env:
#        TWINE_USERNAME: chaostoolkit
#        TWINE_PASSWORD: ${{ secrets.PYPI_PWD }}
#      run: |
#        python3 setup.py release
#        twine upload dist/*

#  build-docker-image:
#    runs-on: ubuntu-16.04
#    needs:
#      - release-to-pypi
#    steps:
#    - uses: actions/checkout@v2
#    - run: echo ::set-env name=RELEASE_VERSION::${GITHUB_REF:10}
#    - run: echo "Release new docker image with tag ${{ env.RELEASE_VERSION }}"
#    - name: Building the Docker image
#      env:
#        DOCKER_TAG: ${{ env.RELEASE_VERSION }}
#      run: |
#        docker build -t chaosiq/chaostoolkit .
#        docker tag chaosiq/chaostoolkit:latest chaosiq/chaostoolkit:${DOCKER_TAG}
#    - name: Publishing to the Docker repository
#      env:
#        DOCKER_TAG: ${{ env.RELEASE_VERSION }}
#        DOCKER_USER_NAME: chaosiq
#        DOCKER_PWD: ${{ secrets.DOCKER_PWD }}
#      run: |
#        docker login -u ${DOCKER_USER_NAME} -p ${DOCKER_PWD}
#        docker push chaosiq/chaostoolkit:latest
#        docker push chaosiq/chaostoolkit:$DOCKER_TAG
